using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http.Headers;
using System.Threading;

namespace search
{
    class SearchRun{
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World");
        }
    }

    /* A graph in its most basic form can be represented as a series of edges.
    * However, in order to have a useful heuristic in the form of distance as the crow flies, that won't suffice.
    * To create this function, there are a couple of options. 
    * 1. Represent the graph nodes as points in space on a coordinate plane.
    * 2. Hard-code values from every node to every other node.
    * 3. "Soft-code" values in a way that is generated by code.
    *
    * To explore Option 3 a little bit further, one way this could be attained is through parsing a text file 
    */

    class BFS{

    }


    class AStar{
        /* The A* search is similar to Dijstra's 
        *
        */
    }
}